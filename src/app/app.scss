//Custom Font
@font-face {
  font-family: worksans;
  src: url('../assets/fonts/worksans.woff2')
}

* {
  font-family: worksans;
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }
}

.tab-item.tab-item-active, .tab-item.active, .tab-item.activated {
  color: color($colors, primary) !important;
}
 

#loggedInMenu ion-list, #loggedOutMenu ion-list {
  margin: -1px 0 10px;
  background-color: white;
}

.bold-font {
  color: #4c4c4c;
}

button[side-menu] {
  border-top-right-radius: 30px !important;
  border-bottom-right-radius: 30px !important;
}

button.active {
  ion-icon {
    color: white !important;
  }
  background-color: #618fca !important;
  color: white !important;
  font-weight: bold;
}

.side_menu_banner {
  height: auto;
  background-color: color($colors, primary);
  .banner_image {
    margin-top: 10px;
    img {
      width: 80px;
      border-radius: 11px;
    }

    .white-color {
      color: white;
      font-size: 120%;
    }
  }
}

button[rounded] {
  border-radius: 11px !important;
}

.round {
  border-radius: 11px !important;
}

.over-image {
  margin: auto;
  padding-top: 20%;
  width: 60px;
}

ion-card {
  border-radius: 18px !important;
}

.no-radius {
  border-radius: 0 !important;
}

.dummy {
  color: #dfdfdf;
  ion-icon {
    margin-top: 61px;
    font-size: 135px;
  }
  p {
    color: #898989;
  }
}

.notification-button {            
  position: relative;
  width: 42px;
  top:1px;
  right: 1px;
  overflow: visible !important;
}


#notifications-badge {
    background-color: red;
    position: absolute;
    top: -3px;
    right: 1px;
    border-radius: 34%;
}

.green-text {
  color: rgb(0, 255, 0);
}

.red-text {
  color: #ff6c00 !important;
}

.red-span {
  background-color: #f86c6b;
  color: white;
  padding: 5px;
  border-radius: 18px;
}

.green-span {
  background-color: #05ac05;
  color: white;
  padding: 5px;
  border-radius: 18px;
}

.orange-span {
  background-color: rgb(255, 123, 0);
  color: white;
  padding: 5px;
  border-radius: 18px;
}

.alert-wrapper {
  border-radius: 16px !important;
  min-width: 265px !important;
}

.popover-content {
  border-radius: 10px !important;
  width: 281px !important;
}

.link {
  color: black;
  text-decoration: none;
}

.rounded-bottom {
  border-bottom-left-radius: 30px !important;
  border-bottom-right-radius: 30px !important;
}

.no-rounded-top {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.no-rounded-bottom {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.rounded-top {
  border-top-left-radius: 30px !important;
  border-top-right-radius: 30px !important;
}

.full-width {
  width: 100% !important;
}

.big_text {
  font-size: 2.1rem;
  font-weight: bold;
}

.medium-text {
  font-size: 11pt;
}

.large_text {
  font-size: 4.1rem;
  font-weight: bold;
}

.add-new {
  padding-top: 57px !important;
}